{"version":3,"sources":["helpers/context.js","components/Maintenance/NotFound/NotFound.js","services/index.js","services/utils.js","services/currentUser.js","components/Users/Register/Register.js","components/Users/Login/Login.js","components/Stock/Common/Screens/ItemTableScreen/ItemTableScreen.js","components/Stock/Common/Screens/ItemTableScreen/ItemRow.js","components/Stock/Common/ItemList.js","services/products.js","components/Stock/Common/Screens/ItemCreateScreen.js","components/Stock/Common/ItemCreate.js","components/Stock/Product/ProductCreate.js","components/Stock/Common/Screens/ItemDetailScreen/GridProductProp.js","components/Stock/Common/Screens/ItemDetailScreen/DetailBody.js","components/Stock/Common/Screens/ItemDetailScreen/DetailHeading.js","components/Stock/Common/Screens/ItemDetailScreen/ItemDetailScreen.js","components/Stock/Common/ItemDetail.js","components/Stock/Product/AddSubproductDialog.js","components/Stock/Product/AddMeasureDialog.js","components/Stock/Product/DetailExtra.js","components/Stock/Product/ProductDetail.js","components/Stock/Product/ProductList.js","components/Stock/Subproduct/SubproductCreate.js","components/Stock/Subproduct/SubproductDetail.js","components/Stock/Subproduct/SubProductList.js","components/Stock/PackagingObject/PackagingObjectCreate.js","components/Stock/PackagingObject/PackagingObjectDetail.js","components/Stock/PackagingObject/PackagingObjectList.js","components/Navigation/Home/HomeScreen.js","hooks/userContext.js","components/Navigation/TopBar/TopBar.js","components/Navigation/Home/Home.js","routes/private_route.js","components/App/App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","NotFound","props","reason","to","setTokens","tokens","localStorage","getItem","sessionStorage","axios","defaults","headers","common","JSON","parse","access","baseURL","process","fetchMultipleLinks","linkList","a","requests","map","link","get","elements","all","then","responses","response","data","getUser","getProducts","user","product_set","getSubproducts","subproduct_set","getPackagingObjects","packagingobject_set","body","post","Register","useState","username","password","form","setForm","errAlerts","setErrAlerts","updateForm","event","target","name","value","Container","component","maxWidth","className","Avatar","Typography","variant","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","error","Boolean","helperText","onChange","type","Button","color","onClick","e","preventDefault","registerUser","history","push","catch","Grid","container","item","Link","RouterLink","Login","remember","setRemember","isError","setIsError","useHistory","locationState","location","state","referer","setAuthTokens","FormHelperText","FormControlLabel","control","Checkbox","checked","loginUser","ItemTableScreen","url","useRouteMatch","title","Paper","elevation","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","loading","CircularProgress","rows","TableFooter","size","length","ItemRow","padding","current_amount","price","cost","ItemList","setRows","setLoading","path","useLocation","getItems","getter","pathname","createComponent","createComp","detailComponent","detailComp","useEffect","items","itemRows","exact","render","getProductWithId","getSubProductWithId","getPackagingObjectWithId","createProduct","createSubproduct","createPackagingObject","deleteProduct","delete","deleteSubproduct","deletePackagingObject","ItemCreateScreen","postItem","description","amount","ItemCreate","extraFormFields","createItem","ProductCreate","GridProductProp","info","DetailBody","spacing","direction","justify","DetailHeading","deleteFunction","IconButton","edge","ItemDetailScreen","refreshFunction","DetailExtra","ItemDetail","setItem","setError","itemID","useParams","deleteItem","deletter","refreshItem","AddSubproductDialog","product","subproduct","quantity","refreshProduct","handleChange","Dialog","open","onClose","close","DialogTitle","DialogContent","FormControl","Select","displayEmpty","subp","MenuItem","Input","placeholder","DialogActions","AddMeasureDialog","packaging_objects","Autocomplete","multiple","filterSelectedOptions","_","values","urls","options","getOptionLabel","option","renderInput","param","SubProductListItem","subprod","comp","composition","ListItem","fontSize","MeasureListItem","measure","openSubproduct","setOpenSubproduct","openMeasure","setOpenMeasure","compositions","usedSubproducts","notUsedSubproducts","packagingObjects","measures","stock","setStock","xs","makeable_amount","toFixed","sm","List","subheader","ListSubheader","prodComposition","filter","ProductDetail","ProductList","SubproductCreate","SubproductDetail","SubproductList","PackagingObjectCreate","PackagingObjectDetail","HomeScreen","UserContext","React","TopAppBar","anchorEl","setAnchorEl","AppBar","position","Toolbar","currentTarget","Menu","keepMounted","Home","setUser","Provider","SubProductList","PackagingObjectList","PrivateRoute","Component","rest","authTokens","App","stringify","refreshAxiosTokens","removeItem","basename","CssBaseline","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbec1305.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction NotFound(props) {\n    return (\n        <div>\n            <h1>404 Page Not Found</h1>\n            <p>{props.reason ? props.reason : ''}</p>\n\n            <Link to='/'>\n                <button>Back to home</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default NotFound\n","import axios from 'axios';\n\n\nexport function setTokens() {\n    const tokens = localStorage.getItem('tokens') || sessionStorage.getItem('tokens');\n    if (tokens) {\n        axios.defaults.headers.common['Authorization'] = 'JWT ' + JSON.parse(tokens).access\n    }\n}\n\nconst baseUrl = process.env.REACT_APP_SERVER_ADDRESS;\naxios.defaults.baseURL = baseUrl;\nsetTokens();\n\nexport default axios\n","import axios from './index'\n\nexport async function fetchMultipleLinks(linkList) {\n    const requests = linkList.map(link => axios.get(link));\n    const elements = axios.all(requests).then(responses => {\n        return responses.map(response => response.data)\n    });\n    return elements;\n}\n","import axios from \"./index\";\nimport { fetchMultipleLinks } from \"./utils\";\n\nexport function getUser() {\n  return axios.get(\"auth/users/me/\").then((response) => response.data);\n}\n\nexport async function getProducts() {\n  let product_set = await getUser().then((user) => user.product_set);\n  return fetchMultipleLinks(product_set);\n}\n\nexport async function getSubproducts() {\n  let subproduct_set = await getUser().then((user) => user.subproduct_set);\n  return fetchMultipleLinks(subproduct_set);\n}\n\nexport async function getPackagingObjects() {\n  let packagingobject_set = await getUser().then(\n    (user) => user.packagingobject_set\n  );\n  return fetchMultipleLinks(packagingobject_set);\n}\n\nexport async function loginUser(body) {\n  const { data } = await axios.post(`auth/jwt/create/`, body);\n  return data;\n}\n\nexport async function registerUser(body) {\n  return await axios.post(`auth/users/`, body);\n}\n","import React, {useState} from 'react'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport {Link as RouterLink} from 'react-router-dom'\nimport {registerUser} from 'services/currentUser'\nimport 'shared/css/authentication.css'\n\nfunction Register(props) {\n    const [form, setForm] = useState({\n        username: '',\n        password: '',\n    })\n    const [errAlerts, setErrAlerts] = useState({\n        username: '',\n        password: '',\n    })\n\n    function postRegister(e) {\n        e.preventDefault();\n        registerUser(form)\n            .then(() => {\n                props.history.push('/login');\n            })\n            .catch(e => {\n                const {data} = e.response\n                setErrAlerts(data)\n            })\n    }\n\n    function updateForm(event) {\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className='paper'>\n                <Avatar className='avatar'>\n                    <AccountCircleIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Register\n                </Typography>\n                <form>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                        error={Boolean(errAlerts.username)}\n                        value={form.username}\n                        helperText={errAlerts.username || 'Letters, digits and @/./+/-/_ only.'}\n                        onChange={updateForm}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        error={Boolean(errAlerts.password)}\n                        value={form.password}\n                        helperText={errAlerts.password || 'It must contain at least 8 characters'}\n                        onChange={updateForm}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='submit'\n                        onClick={postRegister}\n                    >\n                        Register\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link component={RouterLink} to=\"/login\" >\n                                {\"Already have an account? Log In\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nexport default Register\n","import React, {useState} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport {Link as RouterLink, useHistory} from 'react-router-dom';\nimport {useAuth} from 'helpers/context';\nimport {loginUser} from 'services/currentUser'\nimport 'shared/css/authentication.css'\n\nfunction Login(props) {\n    const [form, setForm] = useState({\n        username: '',\n        password: '',\n    })\n    const [remember, setRemember] = useState(false);\n    const [isError, setIsError] = useState(false);\n\n    const history = useHistory();\n    const locationState = props.location.state;\n    const referer = locationState ? locationState.referer : '/';\n    const {setAuthTokens} = useAuth();\n\n    function postLogin(event) {\n        event.preventDefault();\n        loginUser(form)\n            .then(tokens => {\n                setAuthTokens(tokens, remember);\n                history.push(referer);\n            })\n            .catch(error => {\n                setIsError(true);\n                throw error\n            });\n    }\n\n    function updateForm(event) {\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className='paper'>\n                <Avatar className='avatar'>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log In\n                </Typography>\n                <form>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                        error={isError}\n                        value={form.username}\n                        onChange={updateForm}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        error={isError}\n                        value={form.password}\n                        onChange={updateForm}\n                    />\n                    {\n                        isError &&\n                        <FormHelperText\n                            error={true}\n                        >\n                            The username or password you entered is incorrect\n                        </FormHelperText>\n                    }\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                value=\"remember\"\n                                color=\"primary\"\n                                onChange={(e) => (setRemember(e.target.checked))}\n                            />\n                        }\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='submit'\n                        onClick={postLogin}\n                    >\n                        Log In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link component={RouterLink} to=\"/register\" >\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\n\nexport default Login\n","import React from \"react\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableFooter,\n  TableRow,\n  TableCell,\n  Container,\n  Paper,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport \"./index.css\";\n\nfunction ItemTableScreen(props) {\n  let { url } = useRouteMatch();\n\n  return (\n    <Container maxWidth=\"md\">\n      <div>\n        <h1 className=\"central-title\">{props.title}</h1>\n        <Paper elevation={3}>\n          <TableContainer id=\"table\">\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">Name</TableCell>\n                  <TableCell align=\"center\">Current stock (Lts.)</TableCell>\n                  <TableCell align=\"center\">Liter cost</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {props.loading ? (\n                  <TableRow>\n                    <TableCell align=\"center\"></TableCell>\n                    <TableCell align=\"center\">\n                      <CircularProgress />\n                    </TableCell>\n                    <TableCell align=\"center\"></TableCell>\n                  </TableRow>\n                ) : (\n                  props.rows\n                )}\n              </TableBody>\n\n              <TableFooter>\n                <TableRow>\n                  <TableCell size=\"small\" variant=\"footer\">\n                    Total:{\" \"}\n                    {props.rows ? props.rows.length : \"Couldn't find any items\"}\n                  </TableCell>\n                  <TableCell align=\"center\"></TableCell>\n                  <TableCell align=\"center\"></TableCell>\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </TableContainer>\n        </Paper>\n        <div>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            component={Link}\n            to={`${url}/create`}\n          >\n            Create new\n          </Button>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default ItemTableScreen;\n","import React from 'react'\n\nimport {Link as RouterLink, useRouteMatch} from 'react-router-dom'\nimport {TableRow, TableCell, Button} from '@material-ui/core';\n\nimport './index.css'\n\n\nfunction ItemRow(props) {\n    let {url} = useRouteMatch()\n    const {item} = props\n\n    return (\n        <TableRow>\n            <TableCell className='pink-cell' align='center' padding=\"none\">\n                <Button\n                    size=\"small\"\n                    component={RouterLink}\n                    to={`${url}/${item.id}`}\n                >\n                    {item.name}\n                </Button >\n            </TableCell>\n            <TableCell align='right'>\n                {item.current_amount}\n            </TableCell>\n            <TableCell align='right'>\n                {item.price || item.cost}\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default ItemRow\n\n","import React, {useState, useEffect} from 'react'\n\nimport {Switch, Route, useRouteMatch, useLocation} from 'react-router-dom'\n\nimport ItemTableScreen from './Screens/ItemTableScreen/ItemTableScreen'\nimport ItemRow from './Screens/ItemTableScreen/ItemRow'\n\n\nfunction ItemList(props) {\n    const [rows, setRows] = useState();\n    const [loading, setLoading] = useState(true);\n    const {path} = useRouteMatch();\n    const location = useLocation();\n\n    const getItems = props.getter;\n    const pathname = props.pathname;\n    const createComponent = props.createComp;\n    const detailComponent = props.detailComp;\n\n    useEffect(() => {\n        if (location.pathname == pathname) {\n            getItems().then(items => {\n                const itemRows = items.map(item =>\n                    <ItemRow key={item.id} item={item} />\n                );\n                setRows(itemRows);\n                setLoading(false);\n            })\n        }\n    }, [location])\n\n    return (\n        <Switch>\n            <Route exact path={path} render={() => <ItemTableScreen rows={rows} title={props.title} loading={loading} />} />\n            <Route path={`${path}/create`} component={createComponent} />\n            <Route path={`${path}/:itemID`} component={detailComponent} />\n        </Switch>\n    );\n}\n\nexport default ItemList;\n\n","import axios from \"./index\";\nimport { fetchMultipleLinks } from \"./utils\";\n\nexport function getProductWithId(id) {\n  return axios.get(`/api/products/${id}`);\n}\n\nexport function getSubProductWithId(id) {\n  return axios.get(`/api/subproducts/${id}`);\n}\n\nexport function getPackagingObjectWithId(id) {\n  return axios.get(`/api/packaging/${id}`);\n}\n\nexport function createProduct(body) {\n  return axios.post(\"/api/products/\", body);\n}\n\nexport function createSubproduct(body) {\n  return axios.post(\"/api/subproducts/\", body);\n}\n\nexport function createPackagingObject(body) {\n  return axios.post(\"/api/packaging/\", body);\n}\n\nexport function createComposition(body) {\n  return axios.post(\"/api/compositions/\", body);\n}\n\nexport function deleteProduct(id) {\n  return axios.delete(`/api/products/${id}`);\n}\n\nexport function deleteSubproduct(id) {\n  return axios.delete(`/api/subproducts/${id}`);\n}\n\nexport function deletePackagingObject(id) {\n  return axios.delete(`/api/packaging/${id}`);\n}\n\nexport function deleteComposition(id) {\n  return axios.delete(`/api/compositions/${id}`);\n}\n\nexport function getCompositionsOfProduct(product) {\n  const { compositions } = product;\n  return fetchMultipleLinks(compositions);\n}\n\nexport function createMeasure(body) {\n  return axios.post(\"/api/measures/\", body);\n}\n\nexport function getMeasuresOfProduct(product) {\n  const { measures } = product;\n  return fetchMultipleLinks(measures);\n}\n\nexport function getProductComponents(id) {\n  return axios.get(`/api/products/${id}/components_data/`);\n}\n","import React from \"react\";\nimport { TextField, Button, Container } from \"@material-ui/core\";\n\nfunction ItemCreateScreen(props) {\n  const form = props.form;\n  const isError = props.isError;\n  const postItem = props.postItem;\n  const updateForm = props.updateForm;\n\n  return (\n    <Container maxWidth=\"md\">\n      <div>\n        <form>\n          <TextField\n            required\n            error={isError}\n            label=\"Name: \"\n            name=\"name\"\n            value={form.name}\n            onChange={updateForm}\n          />\n          <TextField\n            required\n            error={isError}\n            label=\"Description: \"\n            name=\"description\"\n            value={form.description}\n            onChange={updateForm}\n          />\n          <TextField\n            required\n            error={isError}\n            label=\"Amount: \"\n            name=\"current_amount\"\n            type=\"number\"\n            value={form.amount}\n            onChange={updateForm}\n          />\n          {\"price\" in form && (\n            <TextField\n              required\n              error={isError}\n              label=\"Price: \"\n              name=\"price\"\n              type=\"number\"\n              value={form.price}\n              onChange={updateForm}\n            />\n          )}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"submit\"\n            onClick={postItem}\n          >\n            Create\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default ItemCreateScreen;\n","import React, {useState} from 'react'\n\nimport {useHistory} from 'react-router-dom';\nimport ItemCreateScreen from \"./Screens/ItemCreateScreen\"\n\nfunction ItemCreate(props) {\n    const [form, setForm] = useState({\n        name: '',\n        description: '',\n        current_amount: '',\n        ...props.extraFormFields\n    });\n    const [isError, setIsError] = useState(false);\n    const history = useHistory();\n\n    const createItem = props.createItem;\n    const pathname = props.pathname;\n\n    function postItem(event) {\n        event.preventDefault();\n        createItem(form).then(() => {\n            history.push(pathname)\n        }).catch(error => {\n            setIsError(true);\n            throw error;\n        });\n    }\n\n    function updateForm(event) {\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    return <ItemCreateScreen isError={isError}\n        form={form}\n        postItem={postItem}\n        updateForm={updateForm}\n    />\n}\n\nexport default ItemCreate\n\n","import React from 'react'\n\nimport {createProduct} from 'services/products'\nimport ItemCreate from '../Common/ItemCreate'\n\nfunction ProductCreate() {\n    const pathname = '/products'\n\n    return <ItemCreate createItem={createProduct} pathname={pathname} />\n}\n\nexport default ProductCreate\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nfunction GridProductProp(props) {\n    return (\n        <Grid item>\n            <Paper\n                className='grid-product-prop'\n            >\n                {props.label}{props.info}\n            </Paper>\n        </Grid>\n    )\n}\n\nexport default GridProductProp\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\n\nimport GridProductProp from './GridProductProp'\nimport './index.css'\n\nfunction DetailBody(props) {\n    const item = props.item\n\n    return (\n        <div >\n            <Grid\n                container\n                spacing={2}\n                direction='row'\n                justify='center'\n            >\n                <GridProductProp\n                    label='Current amount: '\n                    info={item.current_amount + ' Lts.'}\n                />\n                <GridProductProp\n                    label='Base production cost: '\n                    info={'$' + (item.price || item.cost)}\n                />\n            </Grid>\n        </div >\n    )\n}\n\nexport default DetailBody\n","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport './index.css'\n\nfunction DetailHeading(props) {\n    const item = props.item\n    const deleteFunction = props.deleteFunction\n\n    return (\n        <div className='heading-container'>\n            <div className='text-heading'>\n                <h1 className='product-title'>{item.name}</h1>\n                <p className='product-description'>{item.description}</p>\n            </div>\n            <div>\n                <IconButton edge='end' onClick={() => deleteFunction(item.id)}>\n                    <DeleteIcon />\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default DetailHeading\n","import React from \"react\";\n\nimport Container from \"@material-ui/core/Container\";\nimport DetailBody from \"./DetailBody\";\nimport DetailHeading from \"./DetailHeading\";\n\nfunction ItemDetailScreen(props) {\n  const item = props.item;\n  const deleteFunction = props.deleteFunction;\n  const refreshFunction = props.refreshFunction;\n  const DetailExtra = props.DetailExtra;\n\n  return (\n    <Container maxWidth=\"md\" className=\"container\">\n      <DetailHeading item={item} deleteFunction={deleteFunction} />\n      <DetailBody item={item} />\n      {DetailExtra && (\n        <DetailExtra item={item} refreshFunction={refreshFunction} />\n      )}\n    </Container>\n  );\n}\n\nexport default ItemDetailScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport NotFound from \"components/Maintenance/NotFound\";\nimport ItemDetailScreen from \"./Screens/ItemDetailScreen/ItemDetailScreen\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction ItemDetail(props) {\n  const [item, setItem] = useState();\n  const [error, setError] = useState(false);\n\n  let { itemID } = useParams();\n  const history = useHistory();\n\n  const pathname = props.pathname;\n  const getItem = props.getter;\n  const deleteItem = props.deletter;\n\n  useEffect(() => {\n    refreshItem();\n  }, [itemID]);\n\n  function refreshItem() {\n    getItem(itemID)\n      .then((response) => setItem(response.data))\n      .catch((error) => {\n        setError(true);\n        throw error;\n      });\n  }\n\n  function handleDelete(id) {\n    deleteItem(id).then(() => {\n      history.push(pathname);\n    });\n  }\n\n  if (error) {\n    return (\n      <NotFound reason=\"Couldn't find the item you searched for. Sorry :(\" />\n    );\n  }\n\n  return !item ? (\n    <CircularProgress />\n  ) : (\n    <ItemDetailScreen\n      item={item}\n      deleteFunction={handleDelete}\n      refreshFunction={refreshItem}\n      DetailExtra={props.DetailExtra}\n    />\n  );\n}\n\nexport default ItemDetail;\n","import React, { useState } from \"react\";\nimport {\n  Select,\n  Input,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { createComposition } from \"services/products\";\n\nfunction AddSubproductDialog(props) {\n  const [form, setForm] = useState({\n    product: props.url,\n    subproduct: \"\",\n    quantity: \"\",\n  });\n\n  const refreshProduct = props.refreshProduct;\n\n  function handleSubmit() {\n    createComposition(form).then(() => refreshProduct());\n    props.close();\n  }\n\n  function handleChange(event) {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  }\n\n  function renderFilteredSubproducts() {\n    const items = props.items.map((subp) => (\n      <MenuItem key={subp.id} value={subp.url}>\n        {subp.name}\n      </MenuItem>\n    ));\n    return items;\n  }\n\n  return (\n    <Dialog open={props.open} onClose={props.close}>\n      <DialogTitle>Add new ingredient</DialogTitle>\n      <DialogContent>\n        <FormControl>\n          <Select name=\"subproduct\" displayEmpty onChange={handleChange}>\n            {renderFilteredSubproducts()}\n          </Select>\n          <Input\n            name=\"quantity\"\n            onChange={handleChange}\n            placeholder=\"Quantity\"\n          ></Input>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleSubmit} color=\"primary\">\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default AddSubproductDialog;\n","import React, { useState } from \"react\";\nimport {\n  TextField,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { createMeasure } from \"services/products\";\n\nfunction AddMeasureDialog(props) {\n  const [form, setForm] = useState({\n    product: props.url,\n    name: \"\",\n    size: \"\",\n    price: \"\",\n    packaging_objects: [],\n  });\n\n  const refreshProduct = props.refreshProduct;\n\n  function handleSubmit() {\n    createMeasure(form).then(() => refreshProduct());\n    props.close();\n  }\n\n  function handleChange(event) {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  }\n\n  return (\n    <Dialog open={props.open} onClose={props.close}>\n      <DialogTitle>Add new measure</DialogTitle>\n      <DialogContent>\n        <FormControl>\n          <Autocomplete\n            multiple\n            filterSelectedOptions\n            onChange={(_, values) => {\n              const urls = values.map((value) => value.url);\n              setForm({ ...form, packaging_objects: urls });\n            }}\n            options={props.items}\n            getOptionLabel={(option) => option.name}\n            renderInput={(param) => (\n              <TextField\n                {...param}\n                label=\"Packaging Products\"\n                placeholder=\"Add packaging\"\n              />\n            )}\n          />\n          <TextField\n            required\n            name=\"name\"\n            onChange={handleChange}\n            label=\"Name\"\n          />\n          <TextField\n            required\n            name=\"size\"\n            type=\"number\"\n            onChange={handleChange}\n            label=\"Size\"\n          />\n          <TextField\n            required\n            name=\"price\"\n            type=\"number\"\n            onChange={handleChange}\n            label=\"Price\"\n          />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleSubmit} color=\"primary\">\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default AddMeasureDialog;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListSubheader,\n} from \"@material-ui/core\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\n\nimport { deleteComposition, getProductComponents } from \"services/products\";\n\nimport AddSubproductDialog from \"./AddSubproductDialog\";\nimport AddMeasureDialog from \"./AddMeasureDialog\";\n\nfunction DetailExtra(props) {\n  const product = props.item;\n  const [openSubproduct, setOpenSubproduct] = useState(false);\n  const [openMeasure, setOpenMeasure] = useState(false);\n  const refreshProduct = props.refreshFunction;\n  const [stock, setStock] = useState({\n    compositions: [],\n    usedSubproducts: [],\n    notUsedSubproducts: [],\n    packagingObjects: [],\n    measures: [],\n  });\n\n  useEffect(() => {\n    getProductComponents(product.id).then((response) =>\n      setStock(response.data)\n    );\n  }, [product]);\n\n  function renderIngredients() {\n    const items = stock.usedSubproducts.map((subp) => {\n      const prodComposition = stock.compositions.filter(\n        (comp) => comp.subproduct === subp.url\n      )[0];\n      return (\n        <SubProductListItem\n          key={subp.id}\n          value={subp}\n          composition={prodComposition}\n          refreshFunction={refreshProduct}\n        />\n      );\n    });\n    return items;\n  }\n\n  function renderMeasures() {\n    const items = stock.measures.map((measure) => {\n      return (\n        <MeasureListItem\n          key={measure.id}\n          value={measure}\n          refreshFunction={refreshProduct}\n        />\n      );\n    });\n    return items;\n  }\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <p>Makeable amount: {product.makeable_amount.toFixed(2)}</p>\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n        <List\n          subheader={\n            <ListSubheader component=\"div\">\n              <h2>\n                Ingredients:\n                <IconButton edge=\"end\" onClick={() => setOpenSubproduct(true)}>\n                  <AddCircleOutlineIcon />\n                </IconButton>\n              </h2>\n            </ListSubheader>\n          }\n        >\n          {renderIngredients()}\n        </List>\n        <AddSubproductDialog\n          items={stock.notUsedSubproducts}\n          refreshProduct={refreshProduct}\n          url={product.url}\n          open={openSubproduct}\n          close={() => setOpenSubproduct(false)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <List\n          subheader={\n            <ListSubheader component=\"div\">\n              <h2>\n                Measures:\n                <IconButton edge=\"end\" onClick={() => setOpenMeasure(true)}>\n                  <AddCircleOutlineIcon />\n                </IconButton>\n              </h2>\n            </ListSubheader>\n          }\n        >\n          {renderMeasures()}\n        </List>\n        <AddMeasureDialog\n          items={stock.packagingObjects}\n          refreshProduct={refreshProduct}\n          url={product.url}\n          open={openMeasure}\n          close={() => setOpenMeasure(false)}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction SubProductListItem(props) {\n  const subprod = props.value;\n  const comp = props.composition;\n  const refreshProduct = props.refreshFunction;\n\n  function handleDelete() {\n    deleteComposition(comp.id).then(() => refreshProduct());\n  }\n\n  return (\n    <ListItem>\n      {`${subprod.name}: ${comp.quantity}`}\n      <IconButton edge=\"end\" onClick={handleDelete}>\n        <HighlightOffIcon fontSize=\"small\" />\n      </IconButton>\n    </ListItem>\n  );\n}\n\nfunction MeasureListItem(props) {\n  const measure = props.value;\n  const refreshProduct = props.refreshFunction;\n\n  function handleDelete() {\n    refreshProduct();\n  }\n\n  return (\n    <ListItem>\n      {`${measure.name}: ${measure.size} - $${measure.price}`}\n      <IconButton edge=\"end\" onClick={handleDelete}>\n        <HighlightOffIcon fontSize=\"small\" />\n      </IconButton>\n    </ListItem>\n  );\n}\n\nexport default DetailExtra;\n","import React from 'react';\nimport {deleteProduct, getProductWithId} from 'services/products';\nimport ItemDetail from '../Common/ItemDetail'\nimport DetailExtra from './DetailExtra'\n\nfunction ProductDetail() {\n    const pathname = \"/products\"\n\n    return <ItemDetail pathname={pathname}\n        getter={getProductWithId}\n        deletter={deleteProduct}\n        DetailExtra={DetailExtra} />\n}\n\nexport default ProductDetail\n","import React from 'react';\nimport {getProducts} from 'services/currentUser';\nimport ItemList from '../Common/ItemList'\n\nimport ProductCreate from './ProductCreate'\nimport ProductDetail from './ProductDetail'\n\n\nfunction ProductList() {\n    const pathname = '/products'\n    const title = \"Products\"\n\n    return <ItemList getter={getProducts}\n        pathname={pathname}\n        title={title}\n        createComp={ProductCreate}\n        detailComp={ProductDetail}\n    />;\n}\n\nexport default ProductList\n","import React from 'react'\nimport {createSubproduct} from 'services/products'\nimport ItemCreate from '../Common/ItemCreate'\n\nfunction SubproductCreate() {\n    const extraFormFields = {\n        price: ''\n    }\n    const pathname = '/subproducts'\n\n    return <ItemCreate extraFormFields={extraFormFields}\n        createItem={createSubproduct}\n        pathname={pathname} />\n}\n\nexport default SubproductCreate\n","import React from 'react'\nimport {getSubProductWithId, deleteSubproduct} from 'services/products'\nimport ItemDetail from '../Common/ItemDetail'\n\nfunction SubproductDetail() {\n    const pathname = \"/subproducts\"\n\n    return <ItemDetail pathname={pathname}\n        getter={getSubProductWithId}\n        deletter={deleteSubproduct} />\n}\n\nexport default SubproductDetail\n","import React from 'react'\n\nimport {getSubproducts} from 'services/currentUser'\n\nimport ItemList from '../Common/ItemList'\nimport SubproductCreate from './SubproductCreate'\nimport SubproductDetail from './SubproductDetail'\n\n\nfunction SubproductList() {\n    const pathname = '/subproducts'\n    const title = \"Subproducts\"\n\n    return <ItemList getter={getSubproducts}\n        pathname={pathname}\n        title={title}\n        createComp={SubproductCreate}\n        detailComp={SubproductDetail} />;\n}\n\nexport default SubproductList\n","import React from 'react';\nimport {createPackagingObject} from 'services/products'\nimport ItemCreate from '../Common/ItemCreate'\n\nfunction PackagingObjectCreate() {\n    const extraFormFields = {\n        price: ''\n    }\n    const pathname = '/packaging'\n\n    return <ItemCreate extraFormFields={extraFormFields}\n        createItem={createPackagingObject}\n        pathname={pathname} />\n}\n\nexport default PackagingObjectCreate\n","import React from 'react'\nimport {getPackagingObjectWithId, deletePackagingObject} from 'services/products'\nimport ItemDetail from '../Common/ItemDetail'\n\nfunction PackagingObjectDetail() {\n    const pathname = \"/packaging\"\n\n    return <ItemDetail pathname={pathname}\n        getter={getPackagingObjectWithId}\n        deletter={deletePackagingObject} />\n}\n\nexport default PackagingObjectDetail\n\n","import React from 'react'\n\nimport {getPackagingObjects} from 'services/currentUser'\n\nimport ItemList from '../Common/ItemList'\nimport PackagingObjectCreate from './PackagingObjectCreate';\nimport PackagingObjectDetail from './PackagingObjectDetail';\n\n\nfunction SubproductList() {\n    const pathname = '/packaging'\n    const title = \"Packaging Objects\"\n\n    return <ItemList getter={getPackagingObjects}\n        pathname={pathname}\n        title={title}\n        createComp={PackagingObjectCreate}\n        detailComp={PackagingObjectDetail} />;\n}\n\nexport default SubproductList\n\n","import React from 'react'\nimport {Link, useRouteMatch} from 'react-router-dom'\nimport {Button, Container} from '@material-ui/core';\nimport \"./index.css\"\n\nfunction HomeScreen() {\n    const {path} = useRouteMatch()\n\n    return (\n        <Container maxWidth=\"sm\" className=\"container\">\n            <div className=\"heading-container\">\n                <h1 className=\"home-title\">Home page</h1>\n            </div>\n            <div className=\"home-body\">\n                <Button color=\"primary\"\n                    variant=\"contained\"\n                    component={Link} to={`${path}products`} >\n                    Go to products\n                </Button>\n\n                <Button color=\"primary\"\n                    variant=\"contained\"\n                    component={Link} to={`${path}subproducts`} >\n                    Go to subproducts\n                </Button>\n\n                <Button color=\"primary\"\n                    variant=\"contained\"\n                    component={Link} to={`${path}packaging`} >\n                    Go to packaging\n                </Button>\n            </div>\n        </Container>\n    )\n}\n\nexport default HomeScreen\n","import React from 'react'\n\nexport const UserContext = React.createContext(null);\n\n","import React, {useState, useContext} from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {Link} from 'react-router-dom'\nimport {useAuth} from 'helpers/context';\nimport {UserContext} from 'hooks/userContext'\n\nimport './TopBar.css'\n\nexport default function TopAppBar() {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const {setAuthTokens} = useAuth();\n    const user = useContext(UserContext);\n\n    function handleClick(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        setAnchorEl(null);\n    }\n\n    function handleLogout() {\n        setAuthTokens(null);\n    }\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className=\"title\">\n                        <Link to='/' className=\"link\">\n                            Product Manager\n            </Link>\n                    </Typography>\n                    <Button color=\"inherit\" onClick={handleClick}> {user ? user.username : ''} </Button>\n                    <Menu\n                        className=\"profile-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React, {useEffect, useState} from 'react'\nimport {Switch, Route, useRouteMatch} from 'react-router-dom'\nimport ProductList from 'components/Stock/Product'\nimport SubProductList from 'components/Stock/Subproduct'\nimport PackagingObjectList from 'components/Stock/PackagingObject'\nimport HomeScreen from './HomeScreen'\nimport TopBar from 'components/Navigation/TopBar'\nimport {getUser} from 'services/currentUser'\nimport {UserContext} from 'hooks/userContext'\n\nfunction Home() {\n    const [user, setUser] = useState();\n    const {path} = useRouteMatch()\n\n    useEffect(() => {\n        getUser().then(user => {\n            setUser(user);\n        });\n    }, [])\n\n    return (\n        <div>\n            <UserContext.Provider value={user}>\n                <TopBar></TopBar>\n                <Switch>\n                    <Route exact path={path} component={HomeScreen} />\n                    <Route path={`${path}products`} component={ProductList} />\n                    <Route path={`${path}subproducts`} component={SubProductList} />\n                    <Route path={`${path}packaging`} component={PackagingObjectList} />\n                </Switch>\n            </UserContext.Provider>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth } from 'helpers/context';\n\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const { authTokens } = useAuth();\n\n    return (\n        <Route {...rest} render={props =>\n            authTokens ?\n                <Component {...props} />\n                :\n                <Redirect to={{ pathname: '/login', state: { referer: props.location } }} />\n        } />\n    )\n}\n\nexport default PrivateRoute\n","import React, {useState} from 'react';\nimport {BrowserRouter as Router, Switch, Route, } from 'react-router-dom';\nimport {AuthContext} from 'helpers/context'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport NotFound from 'components/Maintenance/NotFound'\nimport Register from 'components/Users/Register';\nimport Login from 'components/Users/Login';\nimport Home from 'components/Navigation/Home'\nimport PrivateRoute from 'routes'\nimport {setTokens as refreshAxiosTokens} from 'services/index';\n\nfunction App() {\n    // Try to set the tokens\n    const tokens = localStorage.getItem('tokens') || sessionStorage.getItem('tokens');\n    const [authTokens, setAuthTokens] = useState(tokens);\n\n    function setTokens(data, remember) {\n        if (data) {\n            sessionStorage.setItem('tokens', JSON.stringify(data));\n\n            if (remember) {\n                localStorage.setItem('tokens', JSON.stringify(data));\n            }\n            refreshAxiosTokens();\n        } else {\n            localStorage.removeItem('tokens');\n            sessionStorage.removeItem('tokens');\n        }\n        setAuthTokens(data);\n    }\n\n    return (\n        <AuthContext.Provider value={{authTokens, setAuthTokens: setTokens}}>\n            <Router basename=\"/PM-Frontend\">\n                <CssBaseline />\n                <Switch>\n                    <Route path='/login' component={Login} />\n                    <Route path='/register' component={Register} />\n                    <PrivateRoute path='/' component={Home} />\n                    <Route component={NotFound} />\n                </Switch>\n            </Router>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}