{"version":3,"sources":["helpers/context.js","components/Maintenance/NotFound/NotFound.js","components/Users/Register/Register.js","components/Users/Login/Login.js","services/index.js","services/utils.js","services/currentUser.js","components/Stock/Product/Screens/ProductDetail/GridProductProp.js","components/Stock/Product/Screens/ProductDetail/DetailBody.js","components/Stock/Product/Screens/ProductDetail/DetailHeading.js","components/Stock/Product/Screens/ProductDetail/DetailExtra.js","components/Stock/Product/Screens/ProductDetail/ProductDetailScreen.js","components/Stock/Product/ProductDetail.js","services/products.js","components/Stock/Product/ProductCreate.js","components/Stock/Product/Screens/ProductList/ProductListScreen.js","components/Stock/Product/Screens/ProductList/ProductRow.js","components/Stock/Product/ProductList.js","routes/private_route.js","components/App/App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","NotFound","props","setAuthTokens","reason","onClick","to","Register","useState","username","setUsername","password","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","Container","component","maxWidth","className","Avatar","Typography","variant","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","error","Boolean","value","helperText","onChange","e","target","type","Button","color","preventDefault","body","axios","post","process","then","response","status","history","push","catch","console","log","data","Grid","container","item","Link","RouterLink","Login","isLoggedIn","setLoggedIn","isError","setIsError","remember","setRemember","authTokens","hasToken","locationState","location","state","referer","FormHelperText","FormControlLabel","control","Checkbox","checked","event","tokens","localStorage","getItem","sessionStorage","defaults","headers","common","JSON","parse","access","baseURL","fetchMultipleLinks","linkList","a","async","elements","link","get","getUser","GridProductProp","Paper","info","DetailBody","product","spacing","direction","justify","current_amount","makeable_amount","production_cost_liter","DetailHeading","description","DetailExtra","components","List","ListItem","ProductDetailScreen","ProductDetail","setError","setProduct","productID","useParams","useEffect","fetchProduct","ProductCreate","setName","setDescription","amount","setAmount","createProduct","ProductListScreen","url","useRouteMatch","elevation","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","products","TableFooter","size","length","ProductRow","underline","pathname","ProductList","rows","setRows","path","product_set","getProducts","prod_rows","map","prod","key","renderProducts","exact","render","PrivateRoute","Component","rest","App","Provider","setItem","stringify","removeItem","CssBaseline","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edb1f0b6.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useAuth } from 'helpers/context'\n\nfunction NotFound(props) {\n    const { setAuthTokens } = useAuth();\n\n    function handleLogout() {\n        setAuthTokens();\n    }\n    return (\n        <div>\n            <h1>404 Page Not Found</h1>\n            <p>{props.reason ? props.reason : ''}</p>\n\n            <button onClick={handleLogout}>Logout</button>\n            <Link to='/products'>\n                <button>Ir a products</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default NotFound\n","import React, { useState } from 'react'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport axios from 'axios';\nimport 'shared/css/authentication.css'\n\nfunction Register(props) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [usernameError, setUsernameError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n\n    const baseUrl = process.env.REACT_APP_SERVER_ADDRESS + 'auth/'\n\n    function postRegister(e) {\n        e.preventDefault();\n\n        const body = {\n            username: username,\n            password: password,\n        };\n\n        axios.post(`${baseUrl}users/`, body)\n            .then(response => {\n                if (response.status === 201) {\n                    props.history.push('/products');\n                }\n            })\n            .catch(e => {\n                console.log(e.response);\n                if (e.response) {\n                    const { data } = e.response\n                    setUsernameError(data.username);\n                    setPasswordError(data.password);\n                }\n            })\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className='paper'>\n                <Avatar className='avatar'>\n                    <AccountCircleIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Register\n                </Typography>\n                <form>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                        error={Boolean(usernameError)}\n                        value={username}\n                        helperText={usernameError ? usernameError : 'Letters, digits and @/./+/-/_ only.'}\n                        onChange={(e) => (setUsername(e.target.value))}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        error={Boolean(passwordError)}\n                        value={password}\n                        helperText={passwordError ? passwordError : 'It must contain at least 8 characters'}\n                        onChange={(e) => (setPassword(e.target.value))}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='submit'\n                        onClick={postRegister}\n                    >\n                        Register\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link component={RouterLink} to=\"/login\" >\n                                {\"Already have an account? Log In\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nexport default Register\n","import React, { useState } from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport { Redirect, Link as RouterLink } from 'react-router-dom';\nimport { useAuth } from 'helpers/context';\nimport axios from 'axios';\nimport 'shared/css/authentication.css'\n\nfunction Login(props) {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [remember, setRemember] = useState(false);\n\n    const { authTokens, setAuthTokens } = useAuth();\n    // I use \"authTokens\" to check if the user has already logged in before,\n    // on the other hand I need to store authTokens in state to prevent an error I don't fully understand.\n    // Error ocurrs when authenticating. Warning: Can’t perform a React state update on an unmounted component\n    const [hasToken] = useState(authTokens);\n\n\n    const baseUrl = process.env.REACT_APP_SERVER_ADDRESS + 'auth/'\n\n    function postLogin(event) {\n        event.preventDefault();\n        const body = {\n            username: username,\n            password: password,\n        };\n\n        axios.post(`${baseUrl}jwt/create/`, body)\n            .then((response) => {\n                if (response.status === 200) {\n                    setAuthTokens(response.data, remember);\n                    setLoggedIn(true);\n                } else {\n                    setIsError(true);\n                }\n            })\n            .catch(error => {\n                setIsError(true);\n                throw error\n            });\n    }\n\n    const locationState = props.location.state;\n    const referer = locationState ? locationState.referer : '/products';\n\n    if (isLoggedIn || hasToken) {\n        return <Redirect to={referer} />\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className='paper'>\n                <Avatar className='avatar'>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log In\n                </Typography>\n                <form>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                        error={isError}\n                        value={username}\n                        onChange={(e) => (setUsername(e.target.value))}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        error={isError}\n                        value={password}\n                        onChange={(e) => (setPassword(e.target.value))}\n                    />\n                    {\n                        isError &&\n                        <FormHelperText\n                            error={true}\n                        >\n                            The username or password you entered is incorrect\n                        </FormHelperText>\n                    }\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                value=\"remember\"\n                                color=\"primary\"\n                                onChange={(e) => (setRemember(e.target.checked))}\n                            />\n                        }\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='submit'\n                        onClick={postLogin}\n                    >\n                        Log In\n                    </Button>\n                    <Grid container>\n                        {/* <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid> */}\n                        <Grid item>\n                            <Link component={RouterLink} to=\"/register\" >\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\n\nexport default Login\n","import axios from 'axios';\n\nconst baseUrl = process.env.REACT_APP_SERVER_ADDRESS;\nconst tokens = localStorage.getItem('tokens') || sessionStorage.getItem('tokens');\nif (tokens) {\n    axios.defaults.headers.common['Authorization'] = 'JWT ' + JSON.parse(tokens).access\n}\naxios.defaults.baseURL = baseUrl\n\nexport default axios\n","import axios from './index'\n\nexport async function fetchMultipleLinks(linkList) {\n    const elements = [];\n    for (const link of linkList) {\n        const { data } = await axios.get(link);\n        elements.push(data);\n    }\n    return elements;\n}\n","import axios from './index';\nimport { fetchMultipleLinks } from './utils'\n\nexport async function getUser() {\n    const { data } = await axios.get('auth/users/me/');\n    return data;\n}\n\nexport async function getProducts() {\n    const { product_set } = await getUser();\n    return fetchMultipleLinks(product_set);\n}\n\nexport async function getSubProducts() {\n    const { subproduct_set } = await getUser();\n    return fetchMultipleLinks(subproduct_set)\n}\n\nexport async function getPackagingObjects() {\n    const { packagingobject_set } = await getUser();\n    return fetchMultipleLinks(packagingobject_set)\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nfunction GridProductProp(props) {\n    return (\n        <Grid item>\n            <Paper\n                className='grid-product-prop'\n            >\n                {props.label}{props.info}\n            </Paper>\n        </Grid>\n    )\n}\n\nexport default GridProductProp\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\n\nimport GridProductProp from './GridProductProp'\nimport './index.css'\n\nfunction DetailBody(props) {\n    const product = props.product\n\n    return (\n        <div >\n            <Grid\n                container\n                spacing={2}\n                direction='row'\n                justify='center'\n            >\n                <GridProductProp\n                    label='Current amount: '\n                    info={product.current_amount}\n                />\n                <GridProductProp\n                    label='Makeable amount: '\n                    info={product.makeable_amount}\n                />\n                <GridProductProp\n                    label='Base production cost: '\n                    info={product.production_cost_liter}\n                />\n            </Grid>\n        </div >\n    )\n}\n\nexport default DetailBody\n","import React from 'react'\nimport './index.css'\n\nfunction DetailHeading(props) {\n    const product = props.product\n\n    return (\n        <div id='heading-container'>\n            <h1 className='product-title'>{product.name}</h1>\n            <p className='product-description'>{product.description}</p>\n        </div>\n    )\n\n}\n\nexport default DetailHeading\n","import React, { useState } from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { getComponentsOfProduct } from 'services/products'\n\n\nfunction DetailExtra(props) {\n    const [components, setComponents] = useState()\n\n    function renderComponents(components) {\n        const components_list = components.map(comp =>\n            // <ProductRow key={prod.id} product={prod} />\n            <ListItem key={comp.id} >comp.name</ListItem>\n        )\n        return components_list\n    }\n\n    function fetchCompositions() {\n        getComponentsOfProduct(props.product).then(componentsArray => {\n            const componentsList = renderComponents(componentsArray);\n            setComponents(componentsList);\n        })\n    }\n\n    function renderMeasures() {\n        return <ListItem>Hola</ListItem>\n    }\n\n    return (\n\n        <div>\n\n            <List>\n                {components}\n            </List>\n\n            <List>\n                {renderMeasures()}\n            </List>\n\n        </div>\n    )\n}\n\nexport default DetailExtra\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport DetailBody from './DetailBody';\nimport DetailHeading from './DetailHeading';\nimport DetailExtra from './DetailExtra';\n\n\nfunction ProductDetailScreen(props) {\n    const product = props.product\n\n    return (\n        <Container maxWidth='md' id='container'>\n            <DetailHeading product={product} />\n            <DetailBody product={product} />\n            <DetailExtra product={product} />\n        </Container>\n    )\n}\n\nexport default ProductDetailScreen;\n","import React, { useState, useEffect } from 'react'\n\nimport { useParams } from 'react-router-dom';\n\nimport { getProductWithId } from 'services/products'\nimport NotFound from 'components/Maintenance/NotFound'\nimport ProductDetailScreen from './Screens/ProductDetail/ProductDetailScreen'\n\n\nfunction ProductDetail(props) {\n    const [error, setError] = useState(false);\n    const [product, setProduct] = useState();\n\n    const { state } = props.location;\n    let { productID } = useParams();\n\n    useEffect(() => {\n        async function fetchProduct() {\n            try {\n                const response = await getProductWithId(productID)\n                setProduct(response.data)\n            } catch (error) {\n                setError(true)\n            }\n        }\n        if (!product) {\n            if (state) {\n                setProduct(state);\n            } else {\n                fetchProduct();\n            }\n        }\n    }, [product, productID, state])\n\n    if (error) {\n        return <NotFound reason=\"Couldn't find the product you searched for. Sorry :(\" />\n    }\n    return !product ? 'Loading...' : (<ProductDetailScreen product={product} />)\n}\n\nexport default ProductDetail\n","import axios from './index'\nimport { fetchMultipleLinks } from './utils'\n\nexport function getProductWithId(id) {\n    return axios.get(`/api/products/${id}`);\n}\n\nexport function createProduct(body) {\n    return axios.post('/api/products/', body);\n}\n\nexport function getComponentsOfProduct(product) {\n    const { components } = product;\n    return fetchMultipleLinks(components);\n}\n","import React, { useState } from 'react'\n\nimport { TextField } from '@material-ui/core'\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\n\nimport { createProduct } from 'services/products'\n\nfunction ProductCreate(props) {\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [amount, setAmount] = useState('')\n\n    function postProduct(event) {\n        event.preventDefault();\n        const body = {\n            name: name,\n            description: description,\n            current_amount: amount,\n        }\n        createProduct(body)\n    }\n\n    return (\n        <Container maxWidth='md'>\n            <div>\n              <form>\n                  <TextField\n                      required\n                      label='Name: '\n                      name='name'\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                  />\n                  <TextField\n                      required\n                      label='Description: '\n                      name='description'\n                      value={description}\n                      onChange={(e) => setDescription(e.target.value)}\n                  />\n                  <TextField\n                      required\n                      label='Amount: '\n                      name='amount'\n                      value={amount}\n                      onChange={(e) => setAmount(e.target.value)}\n                  />\n                  <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className='submit'\n                      onClick={postProduct}\n                  >\n                      Create\n                  </Button>\n              </form >\n            </div>\n        </Container>\n    )\n}\n\nexport default ProductCreate\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\n\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\n\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableFooter from '@material-ui/core/TableFooter';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n\nimport './ProductList.css'\n\nfunction ProductListScreen(props) {\n    let { url } = useRouteMatch();\n\n    return (\n        <Container maxWidth='md'>\n            <div>\n                <h1 className='central-title'>Dashboard</h1>\n                <Paper elevation={3}>\n                    <TableContainer id='table'>\n                        <Table>\n\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align='center'>Product name</TableCell>\n                                    <TableCell align='center'>Current stock</TableCell>\n                                    <TableCell align='center'>Liter cost</TableCell>\n                                </TableRow>\n                            </TableHead>\n\n                            <TableBody>\n                                {props.products}\n                            </TableBody>\n\n                            <TableFooter>\n                                <TableRow>\n                                    <TableCell size='small' variant='body'>\n                                        Total Productos: {props.products ?\n                                            props.products.length : 'Couldn\\'t find any products'}\n                                    </TableCell>\n                                    <TableCell></TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                            </TableFooter>\n\n                        </Table>\n                    </TableContainer>\n                </Paper>\n                <div>\n                    <Link to={`${url}/create`}>Crear producto</Link>\n                </div>\n            </div>\n        </Container>\n    )\n}\n\nexport default ProductListScreen\n","import React from 'react'\n\nimport TableRow from '@material-ui/core/TableRow';\nimport Link from '@material-ui/core/Link';\n\nimport { Link as RouterLink, useRouteMatch } from 'react-router-dom'\nimport { TableCell } from '@material-ui/core';\n\nimport './ProductRow.css'\n\n\nfunction ProductRow(props) {\n    let { url } = useRouteMatch()\n    const { product } = props\n\n    return (\n        <TableRow>\n            <TableCell className='pink-cell' align='center'>\n                <Link\n                    color='inherit'\n                    underline='none'\n                    component={RouterLink}\n                    to={{\n                        pathname: `${url}/${product.id}`,\n                        state: product,\n                    }}\n                >\n                    <div>\n                        {product.name}\n                    </div>\n                </Link >\n            </TableCell>\n            <TableCell align='right'>\n                {product.current_amount}\n            </TableCell>\n            <TableCell align='right'>\n                {product.production_cost_liter}\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default ProductRow\n","import React, { useState } from 'react'\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\nimport { getProducts } from 'services/currentUser'\n\nimport ProductDetail from './ProductDetail';\nimport ProductCreate from './ProductCreate';\nimport ProductListScreen from './Screens/ProductList/ProductListScreen'\nimport ProductRow from './Screens/ProductList/ProductRow'\n\n\nfunction ProductList(props) {\n    const [rows, setRows] = useState()\n    const { path } = useRouteMatch()\n\n    function fetchProducts() {\n        getProducts().then(products => {\n            const prod_rows = renderProducts(products)\n            setRows(prod_rows)\n        })\n    }\n\n    function renderProducts(products) {\n        const prod_rows = products.map((prod) =>\n            <ProductRow key={prod.id} product={prod} />\n        );\n        return prod_rows\n    }\n\n    if (!rows) {\n        fetchProducts();\n    }\n\n    return (\n        <Switch>\n            <Route exact path={path} render={() => <ProductListScreen products={rows} />} />\n            <Route path={`${path}/create`} component={ProductCreate} />\n            <Route path={`${path}/:productID`} component={ProductDetail} />\n        </Switch>\n    );\n}\n\nexport default ProductList\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth } from 'helpers/context';\n\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const { authTokens } = useAuth();\n\n    return (\n        <Route {...rest} render={props =>\n            authTokens ?\n                <Component {...props} />\n                :\n                <Redirect to={{ pathname: '/login', state: { referer: props.location } }} />\n        } />\n    )\n}\n\nexport default PrivateRoute\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, } from 'react-router-dom';\nimport { AuthContext } from 'helpers/context'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport NotFound from 'components/Maintenance/NotFound'\nimport Register from 'components/Users/Register';\nimport Login from 'components/Users/Login';\nimport ProductList from 'components/Stock/Product'\nimport PrivateRoute from 'routes'\n\nfunction App() {\n    // Try to set the tokens if there are\n    const tokens = localStorage.getItem('tokens') || sessionStorage.getItem('tokens');\n    const [authTokens, setAuthTokens] = useState(tokens);\n\n    function setTokens(data, remember) {\n        if (data) {\n            sessionStorage.setItem('tokens', JSON.stringify(data));\n\n            if (remember) {\n                localStorage.setItem('tokens', JSON.stringify(data));\n            }\n        } else {\n            localStorage.removeItem('tokens');\n            sessionStorage.removeItem('tokens');\n        }\n        setAuthTokens(data);\n    }\n\n    return (\n        <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n            <Router>\n                <CssBaseline />\n                <Switch>\n                    <Route path='/login' component={Login} />\n                    <Route path='/register' component={Register} />\n                    <PrivateRoute path='/products' component={ProductList} />\n                    <Route component={NotFound} />\n                </Switch>\n            </Router>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}